Спецификация.
1.	Создать класс считывания данных.
1.1.	Метод считывания данных из файла Excel.
1.2.	Метод отправки данных на форму.
1.3.	Запомнить данные хранящиеся в ячейках, эти данные не должны повторяться, т.е. допустим мы имеем 3 ячейки в первой написано «нем» во второй написано «инф»  в третей написано «нем», то мы запомним данные только из первой и второй ячейки, так как данные в первой и третей ячейке повторяются. Запомненные данные должны быть глобальными, т.е. доступны с любого места программы.
1.4.	Создать интерфейс подключения существующего расписания.
1.5.	Вывести загруженное расписание на экран.

2.	Создать таблицу.
2.1.	Таблица должна состоять из 11 столбцов и 35 строк, изначально таблица пуста, при открытии существующего документа, таблица заполняется.
2.2.	В таблице должна присутствовать возможность закрепления какой-либо ячейки пользователем на невозможность редактирования (т.е. данные в этой ячейке не должны изменяться программой). 
2.3.	Так же должна присутствовать возможность склейки ячеек таблицы (т.е. данные в склеенных ячейках будут перемещаться вместе в без возможности изменения положения по одиночке).

3.	Создать класс отсутствующих преподавателей.
3.1.	Получить из формы данные о отсутствующих преподавателей.
3.2.	Запомнить эти данные.
3.3.	Проверить введенные пользователем данные на повторения (их не должно быть).

4.	Создать интерфейс.
4.1.	Начальный вид после запуска программы предлагает пользователю выбрать один из предложенных пунктов.
4.1.1.	создать новое расписание.
4.1.2.	открыть существующее расписание.
4.2.	Если выбран 1 вариант (см. п. 5.1.1.) то пользователь должен ввести в таблицу свой вариант расписания.
4.3.	Если выбран 2 вариант (см. п. 5.1.2.) то пользователь должен выбрать файл из которого будет загружено расписание в таблицу.
4.4.	Пользователь должен ввести отсутствующего учителя и\или его предмет (т.е. то что должно быть удалено из ячеек).
4.5.	Пользователю должно быть предложено проверить расписание (т.е. таблицу с данными) на ошибки составления.
4.6.	Пользователю предлагается исправить эти ошибки с помощью программы или вручную.

5.	Создать возможность управлять расписанием.
5.1.	Проверить при ручном редактировании на совпадение уроков и свободных уроков.
5.2.	Создать возможность вручную редактировать.
5.3.	Сделать ручную фиксацию уроков на невозможность перемещения и редактирования их.

6.	Создать список отсутствующих преподавателей.
6.1.	Создать возможность выбрать преподавателей из списка.
6.2.	Удалить из таблицы  отсутствующих преподавателей.

7.	Создать оптимальное расписание.
7.1.	Поиск свободных ячеек.
7.2.	Переставить предметы так, чтобы не было пустых ячеек и что бы у первого преподавателя не было больше одного класса на уроке (за исключением склейки и ручной блокировки).

8.	Представить отредактированное расписание пользователю.
8.1. Создать шаблон для сохранения данных в Excel.
8.2. Вывести отредактированное расписание в Excel  в виде таблицы

9. Добавить очистку лога удаленных предметов при повторной загрузке таблицы.

10. Создать выборку по дням недели.
10.1. создать возможность пользователю выбора дня недели в программе.
10.2. создать 5 чекбоксов к каждому из которых принадлежит день недели (исключая субботу и воскресенье).
10.3. при запуске программы чекбоксы неактивны их значение должно быть false.
10.4. при переводе чекбокса в состояние true из расписания удаляется тот тот день недели который принадлежит чекбоксу.
10.5. при переводе чекбокса в состояние false в таблицу возвращается отредактированное до удаления расписание.

11. Добавить label Список удаленных из расписания предметов.

12. добавить обработку исключений.
12.1. в классе табл нужно сделать обработку исключения на вхождение символа NULL.


